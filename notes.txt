Game
  -Remove turn
  has n GameThreads where n is num players

GamePlayer
  -Remove turnData
  +removed - boolean (player's turns will be skipped)

GameThread
  gameId
  turn - number (player index is = (turn + threadOffset) % playersLength)
  threadOffset - 0-(num players-1) - offset from player order
  state - playing or complete
  Index: gameId

GameThreadTurn
  threadId
  userId
  turnType - 'draw' or 'describe' or 'skipped'
  turnData
  Index on threadId + creationDate

UserPush
  userId
  pushEndpoint


To figure out where everyone is in the game
  Get Game, players, threads
  The order on each player, plus the turn on each thread, plus the state, tells you who's doing what

To let a player play
  If the thread has landed on this player:
    Get threads where turn + offset % playersLen = player order and thread is not complete
      Join GameThreadTurn, creationDate ascending
      Limit 1
  This provides the previous turn if the current player needs it
  The creation date ordering is important - if the player has two rounds pending, the oldest should always win
    Otherwise they'll be drawing a thing, only for the screen to change to the next round.



Every hour:
  Look for games that ended over a day ago. Delete.

Need a data cleanup phase (1 day?)
V2: Add way to save a 'screenshot'?
What about 'create room' spam?
  Could limit room creation to logged in?
Limit on the size of the image data?
Use push notifications for your turn & game complete
Can easily cache previous 100 pages.
Prevent a user creating too many games.
Make it a PWA
Compression urlencoded body before sending, if compressstream is present
When adding notifications, make sure if the current player is removed, the new current player is notifified
Add prompts to actions that aren't undoable
Proper loading states for everything
How does maxLength work? Make sure the server and JS are in sync with this. Eg, what does an emoji count as?
Wrap clientside requests in try/catch so they don't break in poor connectivity.
Are all refs automatically set to null when parent component unmounts?
Pointer tracker needs a 'remove listeners' method.
If the pointer doesn't move, no line is created
It's possible for -1 to appear during drawing. Max it with 0.
  Same goes for neg 16 values
Hunt down TODOs and console logs
When JS enhances a form, use the form action rather than recreating it
  Maybe create a helper for this? It's pretty repetitive
PointerTracker needs a way to release listeners
Compress image turn upload data?
Reset scroll on dynamic page change.
Trim image on submission? Add a padding.
Fullsceen button for drawing

Next step:
  Make big actions cancellable.
  Make starting games friendly - move start buttons
  Change it so n number of games happen at once
  Push notifications
